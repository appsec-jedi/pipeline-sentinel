name: Pipeline Sentinel Test
run-name: Monitoring build for malicious activity

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker build -t $IMAGE_ID .
          docker push $IMAGE_ID

  test-with-sentinel:
    needs: build
    runs-on: ubuntu-latest

    services:
      sentinel:
        image: ghcr.io/${{ github.repository }}:${{ github.sha }}
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        options: >-
          --pid=host
          --cap-add=SYS_ADMIN
          -v /sys/kernel/debug:/sys/kernel/debug:ro
          -v ${{ github.workspace }}/reports:/app/reports

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Create report directory
        run: mkdir -p reports

      - name: Run Fake Build Script for Testing
        run: |
          chmod +x ./fake_build_script.sh
          ./fake_build_script.sh || true

      - name: Check Sentinel for Critical Alerts and Fail Build
        run: |
          echo "--- Checking Sentinel Logs for Critical Alerts ---"
          # First, save the full log for artifact upload
          docker logs sentinel > reports/sentinel-full-log.txt
          
          # Now, check for critical findings to fail the build
          if grep -q "Severity: critical" reports/sentinel-full-log.txt; then
            echo "Critical alert found in sentinel logs. Failing build."
            echo "--- Full Sentinel Log ---"
            cat reports/sentinel-full-log.txt
            exit 1
          else
            echo "No critical alerts found. Build successful."
          fi
      
      - name: Upload Sentinel Log as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sentinel-log-report
          path: reports/sentinel-full-log.txt
